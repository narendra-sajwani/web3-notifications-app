// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChannelCreated extends ethereum.Event {
  get params(): ChannelCreated__Params {
    return new ChannelCreated__Params(this);
  }
}

export class ChannelCreated__Params {
  _event: ChannelCreated;

  constructor(event: ChannelCreated) {
    this._event = event;
  }

  get channelId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get admin(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get channelName(): string {
    return this._event.parameters[2].value.toString();
  }

  get channelDescription(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class ChannelDeleted extends ethereum.Event {
  get params(): ChannelDeleted__Params {
    return new ChannelDeleted__Params(this);
  }
}

export class ChannelDeleted__Params {
  _event: ChannelDeleted;

  constructor(event: ChannelDeleted) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ChannelMuted extends ethereum.Event {
  get params(): ChannelMuted__Params {
    return new ChannelMuted__Params(this);
  }
}

export class ChannelMuted__Params {
  _event: ChannelMuted;

  constructor(event: ChannelMuted) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ChannelUnmuted extends ethereum.Event {
  get params(): ChannelUnmuted__Params {
    return new ChannelUnmuted__Params(this);
  }
}

export class ChannelUnmuted__Params {
  _event: ChannelUnmuted;

  constructor(event: ChannelUnmuted) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DelegateAdded extends ethereum.Event {
  get params(): DelegateAdded__Params {
    return new DelegateAdded__Params(this);
  }
}

export class DelegateAdded__Params {
  _event: DelegateAdded;

  constructor(event: DelegateAdded) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DelegateRemoved extends ethereum.Event {
  get params(): DelegateRemoved__Params {
    return new DelegateRemoved__Params(this);
  }
}

export class DelegateRemoved__Params {
  _event: DelegateRemoved;

  constructor(event: DelegateRemoved) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NotificationEvent extends ethereum.Event {
  get params(): NotificationEvent__Params {
    return new NotificationEvent__Params(this);
  }
}

export class NotificationEvent__Params {
  _event: NotificationEvent;

  constructor(event: NotificationEvent) {
    this._event = event;
  }

  get notification(): NotificationEventNotificationStruct {
    return changetype<NotificationEventNotificationStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class NotificationEventNotificationStruct extends ethereum.Tuple {
  get channelId(): BigInt {
    return this[0].toBigInt();
  }

  get admin(): Address {
    return this[1].toAddress();
  }

  get recipient(): Address {
    return this[2].toAddress();
  }

  get message(): string {
    return this[3].toString();
  }
}

export class UserSubscribed extends ethereum.Event {
  get params(): UserSubscribed__Params {
    return new UserSubscribed__Params(this);
  }
}

export class UserSubscribed__Params {
  _event: UserSubscribed;

  constructor(event: UserSubscribed) {
    this._event = event;
  }

  get _channelId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get subscriber(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UserUnsubscribed extends ethereum.Event {
  get params(): UserUnsubscribed__Params {
    return new UserUnsubscribed__Params(this);
  }
}

export class UserUnsubscribed__Params {
  _event: UserUnsubscribed;

  constructor(event: UserUnsubscribed) {
    this._event = event;
  }

  get _channelId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get subscriber(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NotificationService extends ethereum.SmartContract {
  static bind(address: Address): NotificationService {
    return new NotificationService("NotificationService", address);
  }

  channelCounter(): BigInt {
    let result = super.call("channelCounter", "channelCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_channelCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "channelCounter",
      "channelCounter():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddDelegateCall extends ethereum.Call {
  get inputs(): AddDelegateCall__Inputs {
    return new AddDelegateCall__Inputs(this);
  }

  get outputs(): AddDelegateCall__Outputs {
    return new AddDelegateCall__Outputs(this);
  }
}

export class AddDelegateCall__Inputs {
  _call: AddDelegateCall;

  constructor(call: AddDelegateCall) {
    this._call = call;
  }

  get delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddDelegateCall__Outputs {
  _call: AddDelegateCall;

  constructor(call: AddDelegateCall) {
    this._call = call;
  }
}

export class CreateChannelCall extends ethereum.Call {
  get inputs(): CreateChannelCall__Inputs {
    return new CreateChannelCall__Inputs(this);
  }

  get outputs(): CreateChannelCall__Outputs {
    return new CreateChannelCall__Outputs(this);
  }
}

export class CreateChannelCall__Inputs {
  _call: CreateChannelCall;

  constructor(call: CreateChannelCall) {
    this._call = call;
  }

  get _channelName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _channelDescription(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateChannelCall__Outputs {
  _call: CreateChannelCall;

  constructor(call: CreateChannelCall) {
    this._call = call;
  }
}

export class DeleteChannelCall extends ethereum.Call {
  get inputs(): DeleteChannelCall__Inputs {
    return new DeleteChannelCall__Inputs(this);
  }

  get outputs(): DeleteChannelCall__Outputs {
    return new DeleteChannelCall__Outputs(this);
  }
}

export class DeleteChannelCall__Inputs {
  _call: DeleteChannelCall;

  constructor(call: DeleteChannelCall) {
    this._call = call;
  }
}

export class DeleteChannelCall__Outputs {
  _call: DeleteChannelCall;

  constructor(call: DeleteChannelCall) {
    this._call = call;
  }
}

export class MuteChannelCall extends ethereum.Call {
  get inputs(): MuteChannelCall__Inputs {
    return new MuteChannelCall__Inputs(this);
  }

  get outputs(): MuteChannelCall__Outputs {
    return new MuteChannelCall__Outputs(this);
  }
}

export class MuteChannelCall__Inputs {
  _call: MuteChannelCall;

  constructor(call: MuteChannelCall) {
    this._call = call;
  }
}

export class MuteChannelCall__Outputs {
  _call: MuteChannelCall;

  constructor(call: MuteChannelCall) {
    this._call = call;
  }
}

export class RemoveDelegateCall extends ethereum.Call {
  get inputs(): RemoveDelegateCall__Inputs {
    return new RemoveDelegateCall__Inputs(this);
  }

  get outputs(): RemoveDelegateCall__Outputs {
    return new RemoveDelegateCall__Outputs(this);
  }
}

export class RemoveDelegateCall__Inputs {
  _call: RemoveDelegateCall;

  constructor(call: RemoveDelegateCall) {
    this._call = call;
  }

  get delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveDelegateCall__Outputs {
  _call: RemoveDelegateCall;

  constructor(call: RemoveDelegateCall) {
    this._call = call;
  }
}

export class SendNotificationCall extends ethereum.Call {
  get inputs(): SendNotificationCall__Inputs {
    return new SendNotificationCall__Inputs(this);
  }

  get outputs(): SendNotificationCall__Outputs {
    return new SendNotificationCall__Outputs(this);
  }
}

export class SendNotificationCall__Inputs {
  _call: SendNotificationCall;

  constructor(call: SendNotificationCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _message(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SendNotificationCall__Outputs {
  _call: SendNotificationCall;

  constructor(call: SendNotificationCall) {
    this._call = call;
  }
}

export class SubscribeCall extends ethereum.Call {
  get inputs(): SubscribeCall__Inputs {
    return new SubscribeCall__Inputs(this);
  }

  get outputs(): SubscribeCall__Outputs {
    return new SubscribeCall__Outputs(this);
  }
}

export class SubscribeCall__Inputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SubscribeCall__Outputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }
}

export class UnmuteChannelCall extends ethereum.Call {
  get inputs(): UnmuteChannelCall__Inputs {
    return new UnmuteChannelCall__Inputs(this);
  }

  get outputs(): UnmuteChannelCall__Outputs {
    return new UnmuteChannelCall__Outputs(this);
  }
}

export class UnmuteChannelCall__Inputs {
  _call: UnmuteChannelCall;

  constructor(call: UnmuteChannelCall) {
    this._call = call;
  }
}

export class UnmuteChannelCall__Outputs {
  _call: UnmuteChannelCall;

  constructor(call: UnmuteChannelCall) {
    this._call = call;
  }
}

export class UnsubscribeCall extends ethereum.Call {
  get inputs(): UnsubscribeCall__Inputs {
    return new UnsubscribeCall__Inputs(this);
  }

  get outputs(): UnsubscribeCall__Outputs {
    return new UnsubscribeCall__Outputs(this);
  }
}

export class UnsubscribeCall__Inputs {
  _call: UnsubscribeCall;

  constructor(call: UnsubscribeCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnsubscribeCall__Outputs {
  _call: UnsubscribeCall;

  constructor(call: UnsubscribeCall) {
    this._call = call;
  }
}
